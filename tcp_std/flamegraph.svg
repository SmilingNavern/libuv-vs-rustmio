<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA[var details, searchbtn, matchedtxt, svg;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}
// mouse-over for info
function s(node) {		// show
    info = g_to_text(node);
    details.nodeValue = nametype + " " + info;
}
function c() {			// clear
    details.nodeValue = ' ';
}
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
})
// functions
function find_child(parent, name, attr) {
    var children = parent.childNodes;
    for (var i=0; i<children.length;i++) {
        if (children[i].tagName == name)
            return (attr != undefined) ? children[i].attributes[attr].value : children[i];
    }
    return;
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_"+attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_"+attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_"+attr].value;
    e.removeAttribute("_orig_"+attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes["width"].value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;
    // Smaller than this size won't fit anything
    if (w < 2*fontsize*fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x=txt.length-2; x>0; x--) {
        if (t.getSubStringLength(0, x+2) <= w) {
            t.textContent = txt.substring(0,x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_child(c[i], x-xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = xpad;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr["width"].value);
    var xmin = parseFloat(attr["x"].value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr["y"].value);
    var ratio = (svg.width.baseVal.value - 2*xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "1.0";
    var el = document.getElementsByTagName("g");
    for(var i=0;i<el.length;i++){
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a["x"].value);
        var ew = parseFloat(a["width"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a["y"].value) > ymin;
        } else {
            var upstack = parseFloat(a["y"].value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.style["opacity"] = "0.5";
                zoom_parent(e);
                e.onclick = function(e){unzoom(); zoom(this);};
                update_text(e);
            }
            // not in current path
            else
                e.style["display"] = "none";
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.style["display"] = "none";
            }
            else {
                zoom_child(e, xmin, ratio);
                e.onclick = function(e){zoom(this);};
                update_text(e);
            }
        }
    }
}
function unzoom() {
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "0.0";
    var el = document.getElementsByTagName("g");
    for(i=0;i<el.length;i++) {
        el[i].style["display"] = "block";
        el[i].style["opacity"] = "1";
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.getElementsByTagName("rect");
    for (var i=0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.style["opacity"] = "0.1";
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.style["opacity"] = "0.0";
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementsByTagName("g");
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        if (e.attributes["class"].value != "func_g")
            continue;
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (rect == null) {
            // the rect might be wrapped in an anchor
            // if nameattr href is being used
            if (rect = find_child(e, "a")) {
                rect = find_child(r, "rect");
            }
        }
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes["width"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes["x"].value);
            orig_save(rect, "fill");
            rect.attributes["fill"].value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.style["opacity"] = "1.0";
    searchbtn.firstChild.nodeValue = "Reset Search"
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.style["opacity"] = "1.0";
    pct = 100 * count / maxwidth;
    if (pct == 100)
        pct = "100"
    else
        pct = pct.toFixed(1)
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function searchover(e) {
    searchbtn.style["opacity"] = "1.0";
}
function searchout(e) {
    if (searching) {
        searchbtn.style["opacity"] = "1.0";
    } else {
        searchbtn.style["opacity"] = "0.1";
    }
}
]]></script><rect x="0" y="0" width="1200" height="502" fill="url(#background)"/><text text-anchor="middle" x="600.00" y="24.00" font-size="17" font-family="Verdana" fill="rgb(0, 0, 0)">Flame Graph</text><text id="details" text-anchor="left" x="10.00" y="485.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><text id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" text-anchor="left" x="10.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Reset Zoom</text><text id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" text-anchor="left" x="1090.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Search</text><text id="matched" text-anchor="left" x="1090.00" y="485.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.10%)</title><rect x="10" y="405" width="1" height="15" fill="rgb(227,156,43)"/><text text-anchor="left" x="13.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>read (1 samples, 0.05%)</title><rect x="10" y="389" width="1" height="15" fill="rgb(245,215,18)"/><text text-anchor="left" x="13.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>read (1 samples, 0.05%)</title><rect x="10" y="373" width="1" height="15" fill="rgb(238,80,7)"/><text text-anchor="left" x="13.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>recv_with_flags (1 samples, 0.05%)</title><rect x="10" y="357" width="1" height="15" fill="rgb(252,154,5)"/><text text-anchor="left" x="13.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.10%)</title><rect x="11" y="405" width="1" height="15" fill="rgb(230,171,5)"/><text text-anchor="left" x="14.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (2 samples, 0.10%)</title><rect x="12" y="389" width="1" height="15" fill="rgb(213,9,25)"/><text text-anchor="left" x="15.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::read_until (3 samples, 0.15%)</title><rect x="12" y="405" width="2" height="15" fill="rgb(221,158,44)"/><text text-anchor="left" x="15.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::memchr::memchr (1 samples, 0.05%)</title><rect x="13" y="389" width="1" height="15" fill="rgb(244,181,25)"/><text text-anchor="left" x="16.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[anon] (8 samples, 0.40%)</title><rect x="10" y="421" width="4" height="15" fill="rgb(220,213,22)"/><text text-anchor="left" x="13.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>write (1 samples, 0.05%)</title><rect x="14" y="405" width="0" height="15" fill="rgb(222,36,24)"/><text text-anchor="left" x="17.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>write (1 samples, 0.05%)</title><rect x="14" y="389" width="0" height="15" fill="rgb(247,117,7)"/><text text-anchor="left" x="17.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[unknown] (5 samples, 0.25%)</title><rect x="14" y="421" width="3" height="15" fill="rgb(223,102,14)"/><text text-anchor="left" x="17.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___clone (5 samples, 0.25%)</title><rect x="14" y="405" width="3" height="15" fill="rgb(206,66,19)"/><text text-anchor="left" x="17.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::result::Result&lt;T,E&gt;::expect (1 samples, 0.05%)</title><rect x="60" y="181" width="1" height="15" fill="rgb(222,75,15)"/><text text-anchor="left" x="63.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__pthread_disable_asynccancel (2 samples, 0.10%)</title><rect x="770" y="53" width="1" height="15" fill="rgb(221,181,38)"/><text text-anchor="left" x="773.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__libc_recv (1,193 samples, 60.10%)</title><rect x="62" y="69" width="710" height="15" fill="rgb(219,60,52)"/><text text-anchor="left" x="65.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__libc_recv</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="771" y="53" width="1" height="15" fill="rgb(220,220,11)"/><text text-anchor="left" x="774.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1,196 samples, 60.25%)</title><rect x="61" y="149" width="711" height="15" fill="rgb(247,226,7)"/><text text-anchor="left" x="64.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>read (1,194 samples, 60.15%)</title><rect x="62" y="133" width="710" height="15" fill="rgb(221,148,45)"/><text text-anchor="left" x="65.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">read</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>read (1,194 samples, 60.15%)</title><rect x="62" y="117" width="710" height="15" fill="rgb(212,10,41)"/><text text-anchor="left" x="65.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">read</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>read (1,194 samples, 60.15%)</title><rect x="62" y="101" width="710" height="15" fill="rgb(214,128,36)"/><text text-anchor="left" x="65.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">read</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>recv_with_flags (1,194 samples, 60.15%)</title><rect x="62" y="85" width="710" height="15" fill="rgb(242,113,47)"/><text text-anchor="left" x="65.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">recv_with_flags</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>cvt&lt;isize&gt; (1 samples, 0.05%)</title><rect x="772" y="69" width="0" height="15" fill="rgb(231,107,33)"/><text text-anchor="left" x="775.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__memmove_avx_unaligned_erms (2 samples, 0.10%)</title><rect x="772" y="149" width="1" height="15" fill="rgb(206,100,50)"/><text text-anchor="left" x="775.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.05%)</title><rect x="774" y="117" width="1" height="15" fill="rgb(208,68,23)"/><text text-anchor="left" x="777.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.05%)</title><rect x="774" y="101" width="1" height="15" fill="rgb(223,100,30)"/><text text-anchor="left" x="777.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_internal (1 samples, 0.05%)</title><rect x="774" y="85" width="1" height="15" fill="rgb(211,206,16)"/><text text-anchor="left" x="777.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::realloc (1 samples, 0.05%)</title><rect x="774" y="69" width="1" height="15" fill="rgb(249,171,22)"/><text text-anchor="left" x="777.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::alloc::realloc (1 samples, 0.05%)</title><rect x="774" y="53" width="1" height="15" fill="rgb(215,170,12)"/><text text-anchor="left" x="777.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_realloc (1 samples, 0.05%)</title><rect x="774" y="37" width="1" height="15" fill="rgb(247,144,45)"/><text text-anchor="left" x="777.00" y="47.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (3 samples, 0.15%)</title><rect x="773" y="149" width="2" height="15" fill="rgb(253,78,3)"/><text text-anchor="left" x="776.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.10%)</title><rect x="774" y="133" width="1" height="15" fill="rgb(236,200,11)"/><text text-anchor="left" x="777.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (1 samples, 0.05%)</title><rect x="775" y="117" width="0" height="15" fill="rgb(205,200,46)"/><text text-anchor="left" x="778.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.05%)</title><rect x="775" y="101" width="0" height="15" fill="rgb(244,20,41)"/><text text-anchor="left" x="778.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (1 samples, 0.05%)</title><rect x="775" y="85" width="0" height="15" fill="rgb(221,194,34)"/><text text-anchor="left" x="778.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::&lt;impl *mut T&gt;::add (1 samples, 0.05%)</title><rect x="775" y="69" width="0" height="15" fill="rgb(232,164,6)"/><text text-anchor="left" x="778.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.05%)</title><rect x="775" y="53" width="0" height="15" fill="rgb(225,205,3)"/><text text-anchor="left" x="778.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::BufRead::read_until (1,204 samples, 60.65%)</title><rect x="61" y="181" width="715" height="15" fill="rgb(220,88,5)"/><text text-anchor="left" x="64.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::io::BufRead::read_until</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::read_until (1,204 samples, 60.65%)</title><rect x="61" y="165" width="715" height="15" fill="rgb(212,17,30)"/><text text-anchor="left" x="64.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::io::read_until</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::memchr::memchr (2 samples, 0.10%)</title><rect x="775" y="149" width="1" height="15" fill="rgb(221,210,28)"/><text text-anchor="left" x="778.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::memchr::memchr (2 samples, 0.10%)</title><rect x="775" y="133" width="1" height="15" fill="rgb(218,161,11)"/><text text-anchor="left" x="778.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__memchr_avx2 (2 samples, 0.10%)</title><rect x="775" y="117" width="1" height="15" fill="rgb(211,56,48)"/><text text-anchor="left" x="778.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::buffered::BufReader&lt;R&gt;::new (2 samples, 0.10%)</title><rect x="776" y="181" width="2" height="15" fill="rgb(231,76,5)"/><text text-anchor="left" x="779.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::buffered::BufReader&lt;R&gt;::with_capacity (2 samples, 0.10%)</title><rect x="776" y="165" width="2" height="15" fill="rgb(222,22,23)"/><text text-anchor="left" x="779.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.10%)</title><rect x="776" y="149" width="2" height="15" fill="rgb(218,68,48)"/><text text-anchor="left" x="779.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (2 samples, 0.10%)</title><rect x="776" y="133" width="2" height="15" fill="rgb(225,195,45)"/><text text-anchor="left" x="779.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.10%)</title><rect x="776" y="117" width="2" height="15" fill="rgb(251,177,37)"/><text text-anchor="left" x="779.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::alloc::Global as core::alloc::Alloc&gt;::alloc (2 samples, 0.10%)</title><rect x="776" y="101" width="2" height="15" fill="rgb(214,170,53)"/><text text-anchor="left" x="779.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::alloc::alloc (2 samples, 0.10%)</title><rect x="776" y="85" width="2" height="15" fill="rgb(223,186,50)"/><text text-anchor="left" x="779.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_malloc (2 samples, 0.10%)</title><rect x="776" y="69" width="2" height="15" fill="rgb(231,2,22)"/><text text-anchor="left" x="779.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_int_malloc (2 samples, 0.10%)</title><rect x="776" y="53" width="2" height="15" fill="rgb(238,172,9)"/><text text-anchor="left" x="779.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>try_clone (6 samples, 0.30%)</title><rect x="778" y="181" width="3" height="15" fill="rgb(248,122,5)"/><text text-anchor="left" x="781.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>duplicate (6 samples, 0.30%)</title><rect x="778" y="165" width="3" height="15" fill="rgb(226,54,22)"/><text text-anchor="left" x="781.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>duplicate (6 samples, 0.30%)</title><rect x="778" y="149" width="3" height="15" fill="rgb(206,225,44)"/><text text-anchor="left" x="781.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::fd::FileDesc::duplicate (6 samples, 0.30%)</title><rect x="778" y="133" width="3" height="15" fill="rgb(248,147,26)"/><text text-anchor="left" x="781.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>fcntl_compat (6 samples, 0.30%)</title><rect x="778" y="117" width="3" height="15" fill="rgb(210,148,54)"/><text text-anchor="left" x="781.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___fcntl (6 samples, 0.30%)</title><rect x="778" y="101" width="3" height="15" fill="rgb(206,161,27)"/><text text-anchor="left" x="781.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__fcntl64_nocancel_adjusted (6 samples, 0.30%)</title><rect x="778" y="85" width="3" height="15" fill="rgb(218,228,2)"/><text text-anchor="left" x="781.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__pthread_disable_asynccancel (2 samples, 0.10%)</title><rect x="1135" y="133" width="1" height="15" fill="rgb(229,26,51)"/><text text-anchor="left" x="1138.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panic::catch_unwind (1,811 samples, 91.23%)</title><rect x="60" y="309" width="1077" height="15" fill="rgb(214,219,36)"/><text text-anchor="left" x="63.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panic::catch_unwind</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panicking::try (1,811 samples, 91.23%)</title><rect x="60" y="293" width="1077" height="15" fill="rgb(221,108,0)"/><text text-anchor="left" x="63.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panicking::try</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__rust_maybe_catch_panic (1,811 samples, 91.23%)</title><rect x="60" y="277" width="1077" height="15" fill="rgb(235,98,18)"/><text text-anchor="left" x="63.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__rust_maybe_catch_panic</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panicking::try::do_call (1,811 samples, 91.23%)</title><rect x="60" y="261" width="1077" height="15" fill="rgb(231,133,17)"/><text text-anchor="left" x="63.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panicking::try::do_call</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt; (1,811 samples, 91.23%)</title><rect x="60" y="245" width="1077" height="15" fill="rgb(230,28,46)"/><text text-anchor="left" x="63.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h62fc99580448f5d3 (1,811 samples, 91.23%)</title><rect x="60" y="229" width="1077" height="15" fill="rgb(246,190,14)"/><text text-anchor="left" x="63.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::_$u7b$$u7b$closure$u7d$$u7d$::h62fc99580448f5d3</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,811 samples, 91.23%)</title><rect x="60" y="213" width="1077" height="15" fill="rgb(238,195,32)"/><text text-anchor="left" x="63.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>tcp_std::main::_$u7b$$u7b$closure$u7d$$u7d$::he8f76c1d67644926 (1,811 samples, 91.23%)</title><rect x="60" y="197" width="1077" height="15" fill="rgb(230,93,5)"/><text text-anchor="left" x="63.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">tcp_std::main::_$u7b$$u7b$closure$u7d$$u7d$::he8f76c1d67644926</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>write (598 samples, 30.13%)</title><rect x="781" y="181" width="356" height="15" fill="rgb(216,123,47)"/><text text-anchor="left" x="784.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">write</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>write (598 samples, 30.13%)</title><rect x="781" y="165" width="356" height="15" fill="rgb(240,145,42)"/><text text-anchor="left" x="784.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">write</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__libc_send (597 samples, 30.08%)</title><rect x="782" y="149" width="355" height="15" fill="rgb(254,40,30)"/><text text-anchor="left" x="785.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__libc_send</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__pthread_enable_asynccancel (1 samples, 0.05%)</title><rect x="1136" y="133" width="1" height="15" fill="rgb(232,149,24)"/><text text-anchor="left" x="1139.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___mmap64 (4 samples, 0.20%)</title><rect x="1148" y="213" width="2" height="15" fill="rgb(251,113,33)"/><text text-anchor="left" x="1151.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___mprotect (4 samples, 0.20%)</title><rect x="1150" y="213" width="3" height="15" fill="rgb(249,195,25)"/><text text-anchor="left" x="1153.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>call_once&lt; (1,846 samples, 93.00%)</title><rect x="60" y="357" width="1097" height="15" fill="rgb(234,119,25)"/><text text-anchor="left" x="63.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">call_once&lt;</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;F as alloc::boxed::FnBox&lt;A&gt;&gt;::call_box (1,846 samples, 93.00%)</title><rect x="60" y="341" width="1097" height="15" fill="rgb(222,13,30)"/><text text-anchor="left" x="63.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;F as alloc::boxed::FnBox&lt;A&gt;&gt;::call_box</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h354026525a874c4c (1,846 samples, 93.00%)</title><rect x="60" y="325" width="1097" height="15" fill="rgb(210,95,37)"/><text text-anchor="left" x="63.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h354026525a874c4c</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::thread::guard::current (35 samples, 1.76%)</title><rect x="1137" y="309" width="20" height="15" fill="rgb(212,106,21)"/><text text-anchor="left" x="1140.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>pthread_getattr_np (35 samples, 1.76%)</title><rect x="1137" y="293" width="20" height="15" fill="rgb(236,125,26)"/><text text-anchor="left" x="1140.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_malloc (35 samples, 1.76%)</title><rect x="1137" y="277" width="20" height="15" fill="rgb(216,144,42)"/><text text-anchor="left" x="1140.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>tcache_init.part.6 (35 samples, 1.76%)</title><rect x="1137" y="261" width="20" height="15" fill="rgb(244,209,10)"/><text text-anchor="left" x="1140.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>arena_get2.part.4 (35 samples, 1.76%)</title><rect x="1137" y="245" width="20" height="15" fill="rgb(231,146,43)"/><text text-anchor="left" x="1140.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>new_heap (35 samples, 1.76%)</title><rect x="1137" y="229" width="20" height="15" fill="rgb(211,209,0)"/><text text-anchor="left" x="1140.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI_munmap (8 samples, 0.40%)</title><rect x="1153" y="213" width="4" height="15" fill="rgb(224,53,27)"/><text text-anchor="left" x="1156.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___clone (1,933 samples, 97.38%)</title><rect x="17" y="421" width="1149" height="15" fill="rgb(254,195,31)"/><text text-anchor="left" x="20.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__GI___clone</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>start_thread (1,861 samples, 93.75%)</title><rect x="60" y="405" width="1106" height="15" fill="rgb(244,142,2)"/><text text-anchor="left" x="63.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">start_thread</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>thread_start (1,861 samples, 93.75%)</title><rect x="60" y="389" width="1106" height="15" fill="rgb(225,147,34)"/><text text-anchor="left" x="63.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">thread_start</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>start_thread (1,861 samples, 93.75%)</title><rect x="60" y="373" width="1106" height="15" fill="rgb(235,153,37)"/><text text-anchor="left" x="63.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">start_thread</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>new (15 samples, 0.76%)</title><rect x="1157" y="357" width="9" height="15" fill="rgb(211,210,8)"/><text text-anchor="left" x="1160.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>make_handler (15 samples, 0.76%)</title><rect x="1157" y="341" width="9" height="15" fill="rgb(240,182,44)"/><text text-anchor="left" x="1160.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>get_stack (15 samples, 0.76%)</title><rect x="1157" y="325" width="9" height="15" fill="rgb(225,174,39)"/><text text-anchor="left" x="1160.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>get_stackp (15 samples, 0.76%)</title><rect x="1157" y="309" width="9" height="15" fill="rgb(243,8,21)"/><text text-anchor="left" x="1160.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___mmap64 (15 samples, 0.76%)</title><rect x="1157" y="293" width="9" height="15" fill="rgb(253,0,45)"/><text text-anchor="left" x="1160.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::net::tcp::Incoming as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.40%)</title><rect x="1169" y="245" width="4" height="15" fill="rgb(229,196,3)"/><text text-anchor="left" x="1172.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>accept (8 samples, 0.40%)</title><rect x="1169" y="229" width="4" height="15" fill="rgb(227,198,47)"/><text text-anchor="left" x="1172.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>accept (8 samples, 0.40%)</title><rect x="1169" y="213" width="4" height="15" fill="rgb(206,216,29)"/><text text-anchor="left" x="1172.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>accept (8 samples, 0.40%)</title><rect x="1169" y="197" width="4" height="15" fill="rgb(219,147,54)"/><text text-anchor="left" x="1172.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>cvt_r&lt;i32,closure&gt; (8 samples, 0.40%)</title><rect x="1169" y="181" width="4" height="15" fill="rgb(231,170,32)"/><text text-anchor="left" x="1172.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>{{closure}} (8 samples, 0.40%)</title><rect x="1169" y="165" width="4" height="15" fill="rgb(250,32,32)"/><text text-anchor="left" x="1172.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>accept4 (8 samples, 0.40%)</title><rect x="1169" y="149" width="4" height="15" fill="rgb(211,132,52)"/><text text-anchor="left" x="1172.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>syscall (8 samples, 0.40%)</title><rect x="1169" y="133" width="4" height="15" fill="rgb(222,94,14)"/><text text-anchor="left" x="1172.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___mmap64 (4 samples, 0.20%)</title><rect x="1181" y="165" width="3" height="15" fill="rgb(246,202,31)"/><text text-anchor="left" x="1184.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___mprotect (1 samples, 0.05%)</title><rect x="1184" y="165" width="0" height="15" fill="rgb(219,106,36)"/><text text-anchor="left" x="1187.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__libc_start_main (34 samples, 1.71%)</title><rect x="1169" y="405" width="20" height="15" fill="rgb(227,224,6)"/><text text-anchor="left" x="1172.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>main (34 samples, 1.71%)</title><rect x="1169" y="389" width="20" height="15" fill="rgb(213,22,42)"/><text text-anchor="left" x="1172.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lang_start_internal (34 samples, 1.71%)</title><rect x="1169" y="373" width="20" height="15" fill="rgb(211,76,40)"/><text text-anchor="left" x="1172.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>catch_unwind&lt;closure,i32&gt; (34 samples, 1.71%)</title><rect x="1169" y="357" width="20" height="15" fill="rgb(246,202,23)"/><text text-anchor="left" x="1172.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>try&lt;i32,closure&gt; (34 samples, 1.71%)</title><rect x="1169" y="341" width="20" height="15" fill="rgb(236,183,5)"/><text text-anchor="left" x="1172.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__rust_maybe_catch_panic (34 samples, 1.71%)</title><rect x="1169" y="325" width="20" height="15" fill="rgb(235,175,9)"/><text text-anchor="left" x="1172.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_call&lt;closure,i32&gt; (34 samples, 1.71%)</title><rect x="1169" y="309" width="20" height="15" fill="rgb(217,135,34)"/><text text-anchor="left" x="1172.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>{{closure}} (34 samples, 1.71%)</title><rect x="1169" y="293" width="20" height="15" fill="rgb(210,183,35)"/><text text-anchor="left" x="1172.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::hf7d93297629d9cef (34 samples, 1.71%)</title><rect x="1169" y="277" width="20" height="15" fill="rgb(245,116,54)"/><text text-anchor="left" x="1172.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>tcp_std::main (34 samples, 1.71%)</title><rect x="1169" y="261" width="20" height="15" fill="rgb(246,217,40)"/><text text-anchor="left" x="1172.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::thread::spawn (26 samples, 1.31%)</title><rect x="1173" y="245" width="16" height="15" fill="rgb(242,196,42)"/><text text-anchor="left" x="1176.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::thread::Builder::spawn (26 samples, 1.31%)</title><rect x="1173" y="229" width="16" height="15" fill="rgb(207,21,32)"/><text text-anchor="left" x="1176.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::thread::Builder::spawn_unchecked (26 samples, 1.31%)</title><rect x="1173" y="213" width="16" height="15" fill="rgb(254,81,15)"/><text text-anchor="left" x="1176.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::thread::Thread::new (26 samples, 1.31%)</title><rect x="1173" y="197" width="16" height="15" fill="rgb(226,42,40)"/><text text-anchor="left" x="1176.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__pthread_create_2_1 (26 samples, 1.31%)</title><rect x="1173" y="181" width="16" height="15" fill="rgb(210,214,46)"/><text text-anchor="left" x="1176.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>create_thread (8 samples, 0.40%)</title><rect x="1184" y="165" width="5" height="15" fill="rgb(233,64,45)"/><text text-anchor="left" x="1187.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___clone (8 samples, 0.40%)</title><rect x="1184" y="149" width="5" height="15" fill="rgb(235,4,49)"/><text text-anchor="left" x="1187.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>all (1,985 samples, 100%)</title><rect x="10" y="453" width="1180" height="15" fill="rgb(248,107,9)"/><text text-anchor="left" x="13.00" y="463.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>tcp_std (1,985 samples, 100.00%)</title><rect x="10" y="437" width="1180" height="15" fill="rgb(242,54,9)"/><text text-anchor="left" x="13.00" y="447.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">tcp_std</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_start (39 samples, 1.96%)</title><rect x="1166" y="421" width="24" height="15" fill="rgb(218,37,44)"/><text text-anchor="left" x="1169.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">_..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_start (1 samples, 0.05%)</title><rect x="1189" y="405" width="1" height="15" fill="rgb(211,121,5)"/><text text-anchor="left" x="1192.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_sysdep_start (1 samples, 0.05%)</title><rect x="1189" y="389" width="1" height="15" fill="rgb(233,120,19)"/><text text-anchor="left" x="1192.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>get_common_indeces.constprop.3 (1 samples, 0.05%)</title><rect x="1189" y="373" width="1" height="15" fill="rgb(237,25,36)"/><text text-anchor="left" x="1192.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g></svg>