<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';]]><![CDATA[var details, searchbtn, matchedtxt, svg;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    searching = 0;
}
// mouse-over for info
function s(node) {		// show
    info = g_to_text(node);
    details.nodeValue = nametype + " " + info;
}
function c() {			// clear
    details.nodeValue = ' ';
}
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
})
// functions
function find_child(parent, name, attr) {
    var children = parent.childNodes;
    for (var i=0; i<children.length;i++) {
        if (children[i].tagName == name)
            return (attr != undefined) ? children[i].attributes[attr].value : children[i];
    }
    return;
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_"+attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_"+attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_"+attr].value;
    e.removeAttribute("_orig_"+attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes["width"].value) -3;
    var txt = find_child(e, "title").textContent.replace(/\\([^(]*\\)\$/,"");
    t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;
    // Smaller than this size won't fit anything
    if (w < 2*fontsize*fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
        return;
    for (var x=txt.length-2; x>0; x--) {
        if (t.getSubStringLength(0, x+2) <= w) {
            t.textContent = txt.substring(0,x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - xpad) * ratio + xpad;
            if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_child(c[i], x-xpad, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes["x"] != undefined) {
            orig_save(e, "x");
            e.attributes["x"].value = xpad;
        }
        if (e.attributes["width"] != undefined) {
            orig_save(e, "width");
            e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (xpad*2);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i=0, c=e.childNodes; i<c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr["width"].value);
    var xmin = parseFloat(attr["x"].value);
    var xmax = parseFloat(xmin + width);
    var ymin = parseFloat(attr["y"].value);
    var ratio = (svg.width.baseVal.value - 2*xpad) / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.0001;
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "1.0";
    var el = document.getElementsByTagName("g");
    for(var i=0;i<el.length;i++){
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a["x"].value);
        var ew = parseFloat(a["width"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a["y"].value) > ymin;
        } else {
            var upstack = parseFloat(a["y"].value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.style["opacity"] = "0.5";
                zoom_parent(e);
                e.onclick = function(e){unzoom(); zoom(this);};
                update_text(e);
            }
            // not in current path
            else
                e.style["display"] = "none";
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.style["display"] = "none";
            }
            else {
                zoom_child(e, xmin, ratio);
                e.onclick = function(e){zoom(this);};
                update_text(e);
            }
        }
    }
}
function unzoom() {
    var unzoombtn = document.getElementById("unzoom");
    unzoombtn.style["opacity"] = "0.0";
    var el = document.getElementsByTagName("g");
    for(i=0;i<el.length;i++) {
        el[i].style["display"] = "block";
        el[i].style["opacity"] = "1";
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.getElementsByTagName("rect");
    for (var i=0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.style["opacity"] = "0.1";
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.style["opacity"] = "0.0";
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = document.getElementsByTagName("g");
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        if (e.attributes["class"].value != "func_g")
            continue;
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (rect == null) {
            // the rect might be wrapped in an anchor
            // if nameattr href is being used
            if (rect = find_child(e, "a")) {
                rect = find_child(r, "rect");
            }
        }
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes["width"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes["x"].value);
            orig_save(rect, "fill");
            rect.attributes["fill"].value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    searchbtn.style["opacity"] = "1.0";
    searchbtn.firstChild.nodeValue = "Reset Search"
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;	// JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.style["opacity"] = "1.0";
    pct = 100 * count / maxwidth;
    if (pct == 100)
        pct = "100"
    else
        pct = pct.toFixed(1)
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function searchover(e) {
    searchbtn.style["opacity"] = "1.0";
}
function searchout(e) {
    if (searching) {
        searchbtn.style["opacity"] = "1.0";
    } else {
        searchbtn.style["opacity"] = "0.1";
    }
}
]]></script><rect x="0" y="0" width="1200" height="470" fill="url(#background)"/><text text-anchor="middle" x="600.00" y="24.00" font-size="17" font-family="Verdana" fill="rgb(0, 0, 0)">Flame Graph</text><text id="details" text-anchor="left" x="10.00" y="453.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><text id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" text-anchor="left" x="10.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Reset Zoom</text><text id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" text-anchor="left" x="1090.00" y="24.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">Search</text><text id="matched" text-anchor="left" x="1090.00" y="453.00" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"> </text><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[[stack]] (1 samples, 0.10%)</title><rect x="10" y="389" width="1" height="15" fill="rgb(230,39,47)"/><text text-anchor="left" x="13.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_malloc (1 samples, 0.10%)</title><rect x="10" y="373" width="1" height="15" fill="rgb(251,64,1)"/><text text-anchor="left" x="13.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (2 samples, 0.21%)</title><rect x="11" y="373" width="2" height="15" fill="rgb(211,112,41)"/><text text-anchor="left" x="14.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__libc_send (1 samples, 0.10%)</title><rect x="13" y="373" width="1" height="15" fill="rgb(218,151,11)"/><text text-anchor="left" x="16.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::read_until (1 samples, 0.10%)</title><rect x="14" y="373" width="2" height="15" fill="rgb(249,158,53)"/><text text-anchor="left" x="17.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[anon] (5 samples, 0.52%)</title><rect x="11" y="389" width="6" height="15" fill="rgb(235,184,31)"/><text text-anchor="left" x="14.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::memchr::memchr (1 samples, 0.10%)</title><rect x="16" y="373" width="1" height="15" fill="rgb(248,36,45)"/><text text-anchor="left" x="19.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[tcp_std] (1 samples, 0.10%)</title><rect x="17" y="389" width="1" height="15" fill="rgb(242,79,11)"/><text text-anchor="left" x="20.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::read_until (1 samples, 0.10%)</title><rect x="17" y="373" width="1" height="15" fill="rgb(206,228,40)"/><text text-anchor="left" x="20.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[tcp_std] (1 samples, 0.10%)</title><rect x="18" y="373" width="1" height="15" fill="rgb(212,35,10)"/><text text-anchor="left" x="21.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::read_until (1 samples, 0.10%)</title><rect x="18" y="357" width="1" height="15" fill="rgb(209,138,14)"/><text text-anchor="left" x="21.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::memchr::memchr (1 samples, 0.10%)</title><rect x="18" y="341" width="1" height="15" fill="rgb(253,92,49)"/><text text-anchor="left" x="21.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___clone (1 samples, 0.10%)</title><rect x="19" y="373" width="2" height="15" fill="rgb(221,128,18)"/><text text-anchor="left" x="22.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__libc_recv (2 samples, 0.21%)</title><rect x="21" y="373" width="2" height="15" fill="rgb(254,3,28)"/><text text-anchor="left" x="24.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_int_realloc (1 samples, 0.10%)</title><rect x="23" y="373" width="1" height="15" fill="rgb(221,24,17)"/><text text-anchor="left" x="26.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>[unknown] (6 samples, 0.63%)</title><rect x="18" y="389" width="8" height="15" fill="rgb(223,208,44)"/><text text-anchor="left" x="21.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::read_until (1 samples, 0.10%)</title><rect x="24" y="373" width="2" height="15" fill="rgb(230,194,10)"/><text text-anchor="left" x="27.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::result::Result&lt;T,E&gt;::expect (1 samples, 0.10%)</title><rect x="60" y="165" width="1" height="15" fill="rgb(221,0,43)"/><text text-anchor="left" x="63.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::net::tcp::TcpStream as std::io::Read&gt;::read (1 samples, 0.10%)</title><rect x="63" y="117" width="1" height="15" fill="rgb(247,194,32)"/><text text-anchor="left" x="66.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>read (1 samples, 0.10%)</title><rect x="63" y="101" width="1" height="15" fill="rgb(232,136,38)"/><text text-anchor="left" x="66.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>read (1 samples, 0.10%)</title><rect x="63" y="85" width="1" height="15" fill="rgb(236,163,47)"/><text text-anchor="left" x="66.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>recv_with_flags (1 samples, 0.10%)</title><rect x="63" y="69" width="1" height="15" fill="rgb(239,46,51)"/><text text-anchor="left" x="66.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>cvt&lt;isize&gt; (1 samples, 0.10%)</title><rect x="63" y="53" width="1" height="15" fill="rgb(213,198,2)"/><text text-anchor="left" x="66.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__pthread_disable_asynccancel (2 samples, 0.21%)</title><rect x="595" y="37" width="2" height="15" fill="rgb(222,148,48)"/><text text-anchor="left" x="598.00" y="47.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (436 samples, 45.70%)</title><rect x="61" y="133" width="540" height="15" fill="rgb(242,66,47)"/><text text-anchor="left" x="64.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;std::io::buffered::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>read (434 samples, 45.49%)</title><rect x="64" y="117" width="537" height="15" fill="rgb(220,180,45)"/><text text-anchor="left" x="67.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">read</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>read (434 samples, 45.49%)</title><rect x="64" y="101" width="537" height="15" fill="rgb(237,175,6)"/><text text-anchor="left" x="67.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">read</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>read (434 samples, 45.49%)</title><rect x="64" y="85" width="537" height="15" fill="rgb(228,114,36)"/><text text-anchor="left" x="67.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">read</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>recv_with_flags (434 samples, 45.49%)</title><rect x="64" y="69" width="537" height="15" fill="rgb(244,69,3)"/><text text-anchor="left" x="67.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">recv_with_flags</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__libc_recv (434 samples, 45.49%)</title><rect x="64" y="53" width="537" height="15" fill="rgb(217,224,30)"/><text text-anchor="left" x="67.00" y="63.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__libc_recv</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__pthread_enable_asynccancel (3 samples, 0.31%)</title><rect x="597" y="37" width="4" height="15" fill="rgb(222,11,2)"/><text text-anchor="left" x="600.00" y="47.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::vec::Vec&lt;T&gt;::reserve (1 samples, 0.10%)</title><rect x="601" y="101" width="1" height="15" fill="rgb(205,229,5)"/><text text-anchor="left" x="604.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>alloc::vec::Vec&lt;T&gt;::extend_from_slice (2 samples, 0.21%)</title><rect x="601" y="133" width="2" height="15" fill="rgb(209,85,47)"/><text text-anchor="left" x="604.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.21%)</title><rect x="601" y="117" width="2" height="15" fill="rgb(228,199,40)"/><text text-anchor="left" x="604.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.10%)</title><rect x="602" y="101" width="1" height="15" fill="rgb(212,58,30)"/><text text-anchor="left" x="605.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.10%)</title><rect x="602" y="85" width="1" height="15" fill="rgb(217,60,3)"/><text text-anchor="left" x="605.00" y="95.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__memmove_avx_unaligned_erms (1 samples, 0.10%)</title><rect x="602" y="69" width="1" height="15" fill="rgb(231,204,40)"/><text text-anchor="left" x="605.00" y="79.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::BufRead::read_until (440 samples, 46.12%)</title><rect x="61" y="165" width="545" height="15" fill="rgb(218,37,23)"/><text text-anchor="left" x="64.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::io::BufRead::read_until</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::io::read_until (440 samples, 46.12%)</title><rect x="61" y="149" width="545" height="15" fill="rgb(238,151,10)"/><text text-anchor="left" x="64.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::io::read_until</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::memchr::memchr (2 samples, 0.21%)</title><rect x="603" y="133" width="3" height="15" fill="rgb(238,121,1)"/><text text-anchor="left" x="606.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::memchr::memchr (2 samples, 0.21%)</title><rect x="603" y="117" width="3" height="15" fill="rgb(220,135,27)"/><text text-anchor="left" x="606.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__memchr_avx2 (2 samples, 0.21%)</title><rect x="603" y="101" width="3" height="15" fill="rgb(217,102,36)"/><text text-anchor="left" x="606.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;F as threadpool::FnBox&gt;::call_box (871 samples, 91.30%)</title><rect x="60" y="197" width="1078" height="15" fill="rgb(214,46,32)"/><text text-anchor="left" x="63.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;F as threadpool::FnBox&gt;::call_box</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>tcp_std::main::_$u7b$$u7b$closure$u7d$$u7d$::hfb885dd53aec9c2b (871 samples, 91.30%)</title><rect x="60" y="181" width="1078" height="15" fill="rgb(245,226,12)"/><text text-anchor="left" x="63.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">tcp_std::main::_$u7b$$u7b$closure$u7d$$u7d$::hfb885dd53aec9c2b</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>write (430 samples, 45.07%)</title><rect x="606" y="165" width="532" height="15" fill="rgb(205,115,36)"/><text text-anchor="left" x="609.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">write</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>write (430 samples, 45.07%)</title><rect x="606" y="149" width="532" height="15" fill="rgb(216,132,16)"/><text text-anchor="left" x="609.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">write</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__libc_send (430 samples, 45.07%)</title><rect x="606" y="133" width="532" height="15" fill="rgb(242,184,7)"/><text text-anchor="left" x="609.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__libc_send</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>core::ptr::real_drop_in_place (1 samples, 0.10%)</title><rect x="1138" y="197" width="1" height="15" fill="rgb(219,16,1)"/><text text-anchor="left" x="1141.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.10%)</title><rect x="1138" y="181" width="1" height="15" fill="rgb(233,209,41)"/><text text-anchor="left" x="1141.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys_common::mutex::Mutex::raw_unlock (1 samples, 0.10%)</title><rect x="1138" y="165" width="1" height="15" fill="rgb(211,116,37)"/><text text-anchor="left" x="1141.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.10%)</title><rect x="1138" y="149" width="1" height="15" fill="rgb(219,33,23)"/><text text-anchor="left" x="1141.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__pthread_mutex_unlock_usercnt (1 samples, 0.10%)</title><rect x="1138" y="133" width="1" height="15" fill="rgb(206,214,13)"/><text text-anchor="left" x="1141.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__lll_unlock_wake (1 samples, 0.10%)</title><rect x="1138" y="117" width="1" height="15" fill="rgb(208,130,17)"/><text text-anchor="left" x="1141.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panic::catch_unwind (888 samples, 93.08%)</title><rect x="60" y="277" width="1099" height="15" fill="rgb(222,158,18)"/><text text-anchor="left" x="63.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panic::catch_unwind</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::panicking::try (888 samples, 93.08%)</title><rect x="60" y="261" width="1099" height="15" fill="rgb(253,39,52)"/><text text-anchor="left" x="63.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::panicking::try</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__rust_maybe_catch_panic (888 samples, 93.08%)</title><rect x="60" y="245" width="1099" height="15" fill="rgb(249,146,29)"/><text text-anchor="left" x="63.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__rust_maybe_catch_panic</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys_common::backtrace::__rust_begin_short_backtrace (888 samples, 93.08%)</title><rect x="60" y="229" width="1099" height="15" fill="rgb(221,74,29)"/><text text-anchor="left" x="63.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>threadpool::spawn_in_pool::_$u7b$$u7b$closure$u7d$$u7d$::hdda2a1bb24ae5692 (888 samples, 93.08%)</title><rect x="60" y="213" width="1099" height="15" fill="rgb(245,83,7)"/><text text-anchor="left" x="63.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">threadpool::spawn_in_pool::_$u7b$$u7b$closure$u7d$$u7d$::hdda2a1bb24ae5692</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 1.68%)</title><rect x="1139" y="197" width="20" height="15" fill="rgb(254,66,3)"/><text text-anchor="left" x="1142.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys_common::mutex::Mutex::raw_lock (16 samples, 1.68%)</title><rect x="1139" y="181" width="20" height="15" fill="rgb(253,84,43)"/><text text-anchor="left" x="1142.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::mutex::Mutex::lock (16 samples, 1.68%)</title><rect x="1139" y="165" width="20" height="15" fill="rgb(215,144,48)"/><text text-anchor="left" x="1142.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___pthread_mutex_lock (16 samples, 1.68%)</title><rect x="1139" y="149" width="20" height="15" fill="rgb(252,223,13)"/><text text-anchor="left" x="1142.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__lll_lock_wait (16 samples, 1.68%)</title><rect x="1139" y="133" width="20" height="15" fill="rgb(247,167,7)"/><text text-anchor="left" x="1142.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___get_nprocs (1 samples, 0.10%)</title><rect x="1159" y="197" width="1" height="15" fill="rgb(209,90,31)"/><text text-anchor="left" x="1162.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__vdso_time (1 samples, 0.10%)</title><rect x="1159" y="181" width="1" height="15" fill="rgb(234,228,6)"/><text text-anchor="left" x="1162.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___mmap64 (1 samples, 0.10%)</title><rect x="1161" y="181" width="1" height="15" fill="rgb(226,5,51)"/><text text-anchor="left" x="1164.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___mprotect (1 samples, 0.10%)</title><rect x="1162" y="181" width="2" height="15" fill="rgb(232,25,47)"/><text text-anchor="left" x="1165.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>call_once&lt; (894 samples, 93.71%)</title><rect x="60" y="325" width="1106" height="15" fill="rgb(206,227,21)"/><text text-anchor="left" x="63.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">call_once&lt;</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;F as alloc::boxed::FnBox&lt;A&gt;&gt;::call_box (894 samples, 93.71%)</title><rect x="60" y="309" width="1106" height="15" fill="rgb(251,186,10)"/><text text-anchor="left" x="63.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">&lt;F as alloc::boxed::FnBox&lt;A&gt;&gt;::call_box</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h3420bc71d90744c2 (894 samples, 93.71%)</title><rect x="60" y="293" width="1106" height="15" fill="rgb(249,23,39)"/><text text-anchor="left" x="63.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">std::thread::Builder::spawn_unchecked::_$u7b$$u7b$closure$u7d$$u7d$::h3420bc71d90744c2</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::thread::guard::current (6 samples, 0.63%)</title><rect x="1159" y="277" width="7" height="15" fill="rgb(250,199,53)"/><text text-anchor="left" x="1162.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>pthread_getattr_np (6 samples, 0.63%)</title><rect x="1159" y="261" width="7" height="15" fill="rgb(218,158,2)"/><text text-anchor="left" x="1162.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___libc_malloc (6 samples, 0.63%)</title><rect x="1159" y="245" width="7" height="15" fill="rgb(214,48,3)"/><text text-anchor="left" x="1162.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>tcache_init.part.6 (6 samples, 0.63%)</title><rect x="1159" y="229" width="7" height="15" fill="rgb(229,93,51)"/><text text-anchor="left" x="1162.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>arena_get2.part.4 (6 samples, 0.63%)</title><rect x="1159" y="213" width="7" height="15" fill="rgb(212,128,1)"/><text text-anchor="left" x="1162.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>new_heap (5 samples, 0.52%)</title><rect x="1160" y="197" width="6" height="15" fill="rgb(228,194,33)"/><text text-anchor="left" x="1163.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI_munmap (2 samples, 0.21%)</title><rect x="1164" y="181" width="2" height="15" fill="rgb(246,84,51)"/><text text-anchor="left" x="1167.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___clone (923 samples, 96.75%)</title><rect x="26" y="389" width="1141" height="15" fill="rgb(251,84,49)"/><text text-anchor="left" x="29.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">__GI___clone</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>start_thread (895 samples, 93.82%)</title><rect x="60" y="373" width="1107" height="15" fill="rgb(226,219,7)"/><text text-anchor="left" x="63.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">start_thread</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>thread_start (895 samples, 93.82%)</title><rect x="60" y="357" width="1107" height="15" fill="rgb(231,188,28)"/><text text-anchor="left" x="63.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">thread_start</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>start_thread (895 samples, 93.82%)</title><rect x="60" y="341" width="1107" height="15" fill="rgb(234,108,5)"/><text text-anchor="left" x="63.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">start_thread</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>new (1 samples, 0.10%)</title><rect x="1166" y="325" width="1" height="15" fill="rgb(212,136,38)"/><text text-anchor="left" x="1169.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>make_handler (1 samples, 0.10%)</title><rect x="1166" y="309" width="1" height="15" fill="rgb(238,109,48)"/><text text-anchor="left" x="1169.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>get_stack (1 samples, 0.10%)</title><rect x="1166" y="293" width="1" height="15" fill="rgb(242,107,46)"/><text text-anchor="left" x="1169.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>get_stackp (1 samples, 0.10%)</title><rect x="1166" y="277" width="1" height="15" fill="rgb(233,4,20)"/><text text-anchor="left" x="1169.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__GI___mmap64 (1 samples, 0.10%)</title><rect x="1166" y="261" width="1" height="15" fill="rgb(218,187,17)"/><text text-anchor="left" x="1169.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>&lt;std::net::tcp::Incoming as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.94%)</title><rect x="1172" y="213" width="11" height="15" fill="rgb(209,32,6)"/><text text-anchor="left" x="1175.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>accept (9 samples, 0.94%)</title><rect x="1172" y="197" width="11" height="15" fill="rgb(216,15,34)"/><text text-anchor="left" x="1175.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>accept (9 samples, 0.94%)</title><rect x="1172" y="181" width="11" height="15" fill="rgb(226,158,3)"/><text text-anchor="left" x="1175.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>accept (9 samples, 0.94%)</title><rect x="1172" y="165" width="11" height="15" fill="rgb(219,155,26)"/><text text-anchor="left" x="1175.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>cvt_r&lt;i32,closure&gt; (9 samples, 0.94%)</title><rect x="1172" y="149" width="11" height="15" fill="rgb(213,17,19)"/><text text-anchor="left" x="1175.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>{{closure}} (9 samples, 0.94%)</title><rect x="1172" y="133" width="11" height="15" fill="rgb(241,193,42)"/><text text-anchor="left" x="1175.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>accept4 (9 samples, 0.94%)</title><rect x="1172" y="117" width="11" height="15" fill="rgb(214,17,6)"/><text text-anchor="left" x="1175.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>syscall (9 samples, 0.94%)</title><rect x="1172" y="101" width="11" height="15" fill="rgb(217,15,53)"/><text text-anchor="left" x="1175.00" y="111.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__libc_start_main (13 samples, 1.36%)</title><rect x="1172" y="373" width="16" height="15" fill="rgb(249,66,29)"/><text text-anchor="left" x="1175.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>main (13 samples, 1.36%)</title><rect x="1172" y="357" width="16" height="15" fill="rgb(223,50,11)"/><text text-anchor="left" x="1175.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>lang_start_internal (13 samples, 1.36%)</title><rect x="1172" y="341" width="16" height="15" fill="rgb(230,183,12)"/><text text-anchor="left" x="1175.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>catch_unwind&lt;closure,i32&gt; (13 samples, 1.36%)</title><rect x="1172" y="325" width="16" height="15" fill="rgb(221,16,12)"/><text text-anchor="left" x="1175.00" y="335.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>try&lt;i32,closure&gt; (13 samples, 1.36%)</title><rect x="1172" y="309" width="16" height="15" fill="rgb(205,215,48)"/><text text-anchor="left" x="1175.00" y="319.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__rust_maybe_catch_panic (13 samples, 1.36%)</title><rect x="1172" y="293" width="16" height="15" fill="rgb(250,17,12)"/><text text-anchor="left" x="1175.00" y="303.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>do_call&lt;closure,i32&gt; (13 samples, 1.36%)</title><rect x="1172" y="277" width="16" height="15" fill="rgb(223,177,26)"/><text text-anchor="left" x="1175.00" y="287.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>{{closure}} (13 samples, 1.36%)</title><rect x="1172" y="261" width="16" height="15" fill="rgb(208,208,26)"/><text text-anchor="left" x="1175.00" y="271.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h4d4ada32d83014d8 (13 samples, 1.36%)</title><rect x="1172" y="245" width="16" height="15" fill="rgb(224,221,40)"/><text text-anchor="left" x="1175.00" y="255.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>tcp_std::main (13 samples, 1.36%)</title><rect x="1172" y="229" width="16" height="15" fill="rgb(243,176,40)"/><text text-anchor="left" x="1175.00" y="239.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>threadpool::ThreadPool::new (4 samples, 0.42%)</title><rect x="1183" y="213" width="5" height="15" fill="rgb(244,118,13)"/><text text-anchor="left" x="1186.00" y="223.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>threadpool::Builder::build (4 samples, 0.42%)</title><rect x="1183" y="197" width="5" height="15" fill="rgb(207,144,6)"/><text text-anchor="left" x="1186.00" y="207.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>threadpool::spawn_in_pool (4 samples, 0.42%)</title><rect x="1183" y="181" width="5" height="15" fill="rgb(237,168,35)"/><text text-anchor="left" x="1186.00" y="191.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::thread::Builder::spawn (4 samples, 0.42%)</title><rect x="1183" y="165" width="5" height="15" fill="rgb(217,3,22)"/><text text-anchor="left" x="1186.00" y="175.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::thread::Builder::spawn_unchecked (4 samples, 0.42%)</title><rect x="1183" y="149" width="5" height="15" fill="rgb(207,64,42)"/><text text-anchor="left" x="1186.00" y="159.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>std::sys::unix::thread::Thread::new (4 samples, 0.42%)</title><rect x="1183" y="133" width="5" height="15" fill="rgb(240,3,5)"/><text text-anchor="left" x="1186.00" y="143.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>__pthread_create_2_1 (4 samples, 0.42%)</title><rect x="1183" y="117" width="5" height="15" fill="rgb(225,164,9)"/><text text-anchor="left" x="1186.00" y="127.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>all (954 samples, 100%)</title><rect x="10" y="421" width="1180" height="15" fill="rgb(210,76,46)"/><text text-anchor="left" x="13.00" y="431.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>tcp_std (954 samples, 100.00%)</title><rect x="10" y="405" width="1180" height="15" fill="rgb(210,71,41)"/><text text-anchor="left" x="13.00" y="415.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">tcp_std</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_start (18 samples, 1.89%)</title><rect x="1167" y="389" width="23" height="15" fill="rgb(243,129,33)"/><text text-anchor="left" x="1170.00" y="399.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)">_..</text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_start (1 samples, 0.10%)</title><rect x="1188" y="373" width="2" height="15" fill="rgb(233,114,41)"/><text text-anchor="left" x="1191.00" y="383.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>_dl_sysdep_start (1 samples, 0.10%)</title><rect x="1188" y="357" width="2" height="15" fill="rgb(214,229,9)"/><text text-anchor="left" x="1191.00" y="367.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g><g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)"><title>dl_main (1 samples, 0.10%)</title><rect x="1188" y="341" width="2" height="15" fill="rgb(207,186,9)"/><text text-anchor="left" x="1191.00" y="351.50" font-size="12" font-family="Verdana" fill="rgb(0, 0, 0)"></text></g></svg>